(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2017-02-02 16:02:22.720327                       *
 *************************************************************************)


(* ajMat *)
ajMat::usage = "\
ajMat[mat] gives the adjoint transpose of matrix mat using aj instead of ConjugateTranspose.

See also: tpMat, coMat, MatMult.";

(* coMat *)
coMat::usage = "\
coMat[mat] gives the conjugate of matrix mat using co instead of Conjugate.

See also: tpMat, ajMat, MatMult.";

(* NCInverse *)
NCInverse::usage = "\
NCInverse[mat] gives the nc inverse of the square matrix mat. NCInverse uses partial pivoting to find a nonzero pivot.

NCInverse is primarily used symbolically. Usually the elements of the inverse matrix are huge expressions. We recommend using NCSimplifyRational to improve the results.

See also: tpMat, ajMat, coMat.";

(* MatMult *)
MatMult::usage = "\
MatMult[mat1, mat2, ...] gives the matrix multiplication of mat1, mat2, ... using NonCommutativeMultiply rather than Times.

See also: tpMat, ajMat, coMat.

Notes

The experienced matrix analyst should always remember that the Mathematica convention for handling vectors is tricky.

-   {{1,2,4}} is a 1x3 _matrix_ or a _row vector_;
-   {{1},{2},{4}} is a 3x1 _matrix_ or a _column vector_;
-   {1,2,4} is a _vector_ but NOT a _matrix_. Indeed whether it is a row or column vector depends on the context. We advise not to use _vectors_.";

(* tpMat *)
tpMat::usage = "\
tpMat[mat] gives the transpose of matrix mat using tp.

See also: ajMat, coMat, MatMult.";
